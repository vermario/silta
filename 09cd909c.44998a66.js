(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},f=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,m=u["".concat(l,".").concat(f)]||u[f]||b[f]||o;return n?r.a.createElement(m,i(i({ref:t},c),{},{components:n})):r.a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(100)),l={},i={unversionedId:"gcp_filestore_migration",id:"gcp_filestore_migration",isDocsHomePage:!1,title:"gcp_filestore_migration",description:"Replace file storage with Google's Filestore volume.",source:"@site/docs/gcp_filestore_migration.md",slug:"/gcp_filestore_migration",permalink:"/silta/docs/gcp_filestore_migration",editUrl:"https://github.com/wunderio/silta/tree/master/docs/gcp_filestore_migration.md",version:"current"},s=[{value:"!! LIMITATIONS, PITFALLS",id:"-limitations-pitfalls",children:[]},{value:"Changing storage for an existing environment:",id:"changing-storage-for-an-existing-environment",children:[]},{value:"Changing storage for a new deployment, project:",id:"changing-storage-for-a-new-deployment-project",children:[]}],c={toc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"replace-file-storage-with-googles-filestore-volume"},"Replace file storage with Google's Filestore volume."),Object(o.b)("p",null,"This example will change storage for Drupal public files.\nRepeat the same steps for other volumes, such as private files. "),Object(o.b)("h3",{id:"-limitations-pitfalls"},"!! LIMITATIONS, PITFALLS"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Do not delete the old public-files section, nor change their names. Kubernetes tracks the volumes by these names."),Object(o.b)("li",{parentName:"ol"},"Do not change storage size after the first deployment. You will end up in an error state: Ignoring the PVC: didn't find a plugin capable of expanding the volume; waiting for an external controller to process this PVC."),Object(o.b)("li",{parentName:"ol"},"The provisioned storage limit is not enforced. The application can expand to use all the available storage regardless of the provisioned size.\nIf you run out of free space on volume, contact cluster administrator for its expansion."),Object(o.b)("li",{parentName:"ol"},"The provisioned storage is not guaranteed. You may allocate more than the NFS share's total size. The share may also not have enough storage space left to actually accommodate the request.")),Object(o.b)("h2",{id:"changing-storage-for-an-existing-environment"},"Changing storage for an existing environment:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Add a new location which uses the new storage. We will extend default values from ",Object(o.b)("a",{parentName:"li",href:"https://github.com/wunderio/charts/blob/039f29d9d507813d40a182fa2320adfd6a3db06a/drupal/values.yaml#L355"},"https://github.com/wunderio/charts/blob/039f29d9d507813d40a182fa2320adfd6a3db06a/drupal/values.yaml#L355"))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"mounts:\n  public-files-filestore:\n    enabled: true\n    storage: 10G\n    mountPath: /app/web/sites/default/files-new\n    storageClassName: nfs-shared\n")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Deploy")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Copy public files from ",Object(o.b)("inlineCode",{parentName:"p"},"/app/web/sites/default/files")," to this new location, ",Object(o.b)("inlineCode",{parentName:"p"},"/app/web/sites/default/files-new"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Map the new volume to public files location, disable the old volume."))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"mounts:\n  public-files-filestore:\n    enabled: true\n    storage: 1G\n    mountPath: /app/web/sites/default/files\n    storageClassName: nfs-shared\n  public-files:\n    enabled: false\n    mountPath: /app/web/sites/default/files-old\n")),Object(o.b)("ol",{start:5},Object(o.b)("li",{parentName:"ol"},"Add the original Drupal file paths as environment variables.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"php:\n  env:\n    PRIVATE_FILES_PATH: /app/private\n    PUBLIC_FILES_PATH: /app/web/sites/default/files\n")),Object(o.b)("h2",{id:"changing-storage-for-a-new-deployment-project"},"Changing storage for a new deployment, project:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Redefine the default public and private files volumes.")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"mounts:\n  public-files:\n    enabled: true\n    storage: 1G\n    mountPath: /app/web/sites/default/files\n    storageClassName: nfs-shared\n  private-files:\n    enabled: true\n    storage: 1G\n    mountPath: /app/private\n    storageClassName: nfs-shared\n")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Deploy - this is your first deployment for the project or environment.")))}p.isMDXComponent=!0}}]);