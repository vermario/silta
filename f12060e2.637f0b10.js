(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{94:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(99)),o={},s={unversionedId:"vendor-aks",id:"vendor-aks",isDocsHomePage:!1,title:"vendor-aks",description:"Azure Services compatibility",source:"@site/docs/vendor-aks.md",slug:"/vendor-aks",permalink:"/silta/docs/vendor-aks",editUrl:"https://github.com/wunderio/silta/tree/master/docs/vendor-aks.md",version:"current"},l=[{value:"Cluster requirements",id:"cluster-requirements",children:[]},{value:"Deployment specifics",id:"deployment-specifics",children:[]},{value:"Azure features",id:"azure-features",children:[{value:"Azure Files",id:"azure-files",children:[]},{value:"Application Gateway",id:"application-gateway",children:[]}]}],c={toc:l};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"azure-services-compatibility"},"Azure Services compatibility"),Object(i.b)("p",null,"Silta is AKS compatible, there are some requirements and special features available for environments deployed to Azure AKS cluster."),Object(i.b)("h2",{id:"cluster-requirements"},"Cluster requirements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"AKS network plugin = kubenet and network policy = calico (can't be changed after cluster is created) for Calico Network Policy support;"),Object(i.b)("li",{parentName:"ul"},"Network CIDR should preferably be 10.x.y.z (default value). Changing is possible, will require deployment value tweaks;"),Object(i.b)("li",{parentName:"ul"},"Microsoft.Storage subscription for azurefile-csi mounts (optional, if used)")),Object(i.b)("p",null,"There are few more requirements listed on ",Object(i.b)("a",{parentName:"p",href:"https://github.com/wunderio/charts/tree/master/silta-cluster#requirements"},"silta-cluster chart page"),", those are common for all silta-cluster installations "),Object(i.b)("h2",{id:"deployment-specifics"},"Deployment specifics"),Object(i.b)("p",null,"There is no extra configuration required for basic deployments. The only change would be ",Object(i.b)("inlineCode",{parentName:"p"},"cluster.type")," but it's normally overriden in CI pipeline."),Object(i.b)("p",null,"Drupal, frontend and simple charts:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"cluster:\n  type: aks\n")),Object(i.b)("h2",{id:"azure-features"},"Azure features"),Object(i.b)("h3",{id:"azure-files"},"Azure Files"),Object(i.b)("p",null,"By default, silta is configured to provide shared storage mounts with ",Object(i.b)("a",{parentName:"p",href:"https://min.io/"},"Minio"),", locally hosted S3 compatible object storage provider. When ",Object(i.b)("a",{parentName:"p",href:"https://github.com/wunderio/charts/tree/master/silta-cluster"},"silta-cluster")," is configured accordingly, the ",Object(i.b)("inlineCode",{parentName:"p"},"silta-shared")," storageClass will use ",Object(i.b)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blobs-introduction"},"Microsoft Azure Blob Storage")," for shared mounts (backups, reference data, public and private file mounts)."),Object(i.b)("p",null,'Since AKS provides "',Object(i.b)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/storage/files/storage-files-introduction"},"Azure Files"),'" CSI storage driver with "',Object(i.b)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"},"Read Write Many"),'" support, it\'s possible to swap "Azure Blob Storage" for "Azure Files". It provides slightly increased i/o performance and instant mounted data synchronization between backends. '),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},'Note: The "azurefile-csi" storage is case insensitive. There is no distinction between files called "Abc" and "ABC", it will rewrite the same file.')),Object(i.b)("p",null,"Note 2: This is normally only needed only for projects with many files and many backends."),Object(i.b)("p",null,"Note 3: You can't change this value for existing deployments. Deployment needs to be removed and redeployed."),Object(i.b)("p",null,"To set up, override ",Object(i.b)("inlineCode",{parentName:"p"},"silta-shared"),' storage class to "azurefile-csi" and double check "storage" value because this will be used and enforced now. If you make the reservation too small, You\'ll need to ask cluster administrator to ',Object(i.b)("a",{parentName:"p",href:"https://github.com/wunderio/silta/blob/master/docs/troubleshooting.md#mariadb-or-elasticsearch-running-out-of-disk-space"},"expand the storage value"),"."),Object(i.b)("p",null,"Minimal configuration (drupal chart):"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"mounts:\n  public-files:\n    # check and override `storage` value according to project specifics\n    storageClassName: azurefile-csi\n    storage: 1G\n  # don't forget to override private file storage if in use\n  # private-files:\n  #   storageClassName: azurefile-csi\n")),Object(i.b)("p",null,"This also allows replacing ",Object(i.b)("inlineCode",{parentName:"p"},"storageClassName")," for other mounts (i.e. backups, reference data), but it makes less sense to adjust them."),Object(i.b)("p",null,"Troubleshooting: "),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"It's possible that the azurefile-csi driver is not enabled. Ask cluster administrator to enable it.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"# Register Microsoft.Storage subscription for azurefile-csi mounts\naz provider register --namespace Microsoft.Storage\n")),Object(i.b)("h3",{id:"application-gateway"},"Application Gateway"),Object(i.b)("p",null,"Silta provides a way to use existing ",Object(i.b)("a",{parentName:"p",href:"https://azure.microsoft.com/en-us/services/application-gateway/"},"Azure Application Gateway")," for deployment URLs and exposed domains."),Object(i.b)("h4",{id:"aks-cluster-preparations"},"AKS cluster preparations"),Object(i.b)("p",null,"It would require Azure administrator to do few adjustments first (one time thing):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Creating virtual network and subnetwork for Application Gateway"),Object(i.b)("li",{parentName:"ul"},"Application Gateway and static ip that will be used for deployment DNS entries"),Object(i.b)("li",{parentName:"ul"},"Bi-directional network peering for Application Gateway network and Kubernetes Cluster networks"),Object(i.b)("li",{parentName:"ul"},"Enabling AGIC addon in Kubernetes Cluster so it monitors in-cluster ingress resources"),Object(i.b)("li",{parentName:"ul"},"Associating the route table to Application Gateway's subnet")),Object(i.b)("p",null,"Related documentation bits:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/azure/application-gateway/tutorial-ingress-controller-add-on-existing"},"https://docs.microsoft.com/en-us/azure/application-gateway/tutorial-ingress-controller-add-on-existing")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://azure.github.io/application-gateway-kubernetes-ingress/how-tos/networking/#with-kubenet"},"https://azure.github.io/application-gateway-kubernetes-ingress/how-tos/networking/#with-kubenet"))),Object(i.b)("h4",{id:"deployment-preparations"},"Deployment preparations"),Object(i.b)("p",null,"You will need to grant Application Gateway access to deployment"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'nginx:\n  # Allow Application Gateway network to access liveness probes\n  noauthips:\n    custom-azure-appgw: 172.30.1.0/24\n  # Trust Application Gateway network to supply real ip via "x-forwarded-for" header. \n  # Ommiting this will remove basic auth for all requests (see `nginx.noauthips`)\n  realipfrom: \n    custom-azure-appgw: 172.30.1.0/24\n  \n# Add NetworkPolicy exception for Application Gateway or it will timeout\nsilta-release:\n  ingressAccess:\n    CustomAzureAppGWAccess:\n      from:\n        - ipBlock:\n            cidr: 172.30.1.0/24\n')),Object(i.b)("p",null,"Note: Replace ",Object(i.b)("inlineCode",{parentName:"p"},"172.30.1.0/24")," with the actual value. Ask cluster administrator the actual network address."),Object(i.b)("p",null,"There are two options to use the Application Gateway:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Keeping existing load balancer (traefik) for default ingress class for deployment, leaving existing built-in domain as-is and only changing ingress class for ",Object(i.b)("inlineCode",{parentName:"li"},"exposeDomains")," domain (this is preferred):")),Object(i.b)("p",null,"Drupal chart:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'exposeDomains:\n  example:\n    hostname: example.com\n    # "aks" is a generic key name that references ingress.[ingressname]. It does not mean anything.\n    ingress: aks\n\ningress:\n  aks:\n    # This is the actual ingressClass name\n    type: azure/application-gateway\n    # Can add custom annotations to ingress. \n    # See: https://azure.github.io/application-gateway-kubernetes-ingress/annotations/\n    # extraAnnotations:\n      # appgw.ingress.kubernetes.io/ssl-redirect: true\n\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Replacing default ingress class with Application Gateway. This will require additional DNS entry changes.")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"exposeDomains:\n  example:\n    hostname: example.com\n\ningress:\n  default:\n    type: azure/application-gateway\n")),Object(i.b)("p",null,"Note: You can define ",Object(i.b)("a",{parentName:"p",href:"https://azure.github.io/application-gateway-kubernetes-ingress/annotations/"},"custom annotations")," for ingress using ",Object(i.b)("inlineCode",{parentName:"p"},"ingress.[ingressname].extraAnnotations"),"."))}p.isMDXComponent=!0},99:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||i;return a?r.a.createElement(m,s(s({ref:t},c),{},{components:a})):r.a.createElement(m,s({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);