(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{86:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(99)),c={},i={unversionedId:"vendor-gcs",id:"vendor-gcs",isDocsHomePage:!1,title:"vendor-gcs",description:"Google Cloud compatibility",source:"@site/docs/vendor-gcs.md",slug:"/vendor-gcs",permalink:"/silta/docs/vendor-gcs",editUrl:"https://github.com/wunderio/silta/tree/master/docs/vendor-gcs.md",version:"current"},s=[{value:"Cluster requirements",id:"cluster-requirements",children:[]},{value:"Deployment specifics",id:"deployment-specifics",children:[]},{value:"Google Cloud features",id:"google-cloud-features",children:[{value:"VPC native cluster",id:"vpc-native-cluster",children:[]},{value:"GKE Ingress for HTTP(S) Load Balancing",id:"gke-ingress-for-https-load-balancing",children:[]},{value:"Cloud Armor",id:"cloud-armor",children:[]}]}],l={toc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"google-cloud-compatibility"},"Google Cloud compatibility"),Object(a.b)("p",null,"Silta is fully GKE compatible since it's primarily used on it."),Object(a.b)("h2",{id:"cluster-requirements"},"Cluster requirements"),Object(a.b)("p",null,"Requirements are listed on ",Object(a.b)("a",{parentName:"p",href:"https://github.com/wunderio/charts/tree/master/silta-cluster#requirements"},"silta-cluster chart page"),", those are common for all silta-cluster installations. "),Object(a.b)("h2",{id:"deployment-specifics"},"Deployment specifics"),Object(a.b)("p",null,"There is no extra configuration required for basic deployments. The only change would be ",Object(a.b)("inlineCode",{parentName:"p"},"cluster.type")," but it's normally overridden in CI pipeline."),Object(a.b)("p",null,"Drupal, frontend and simple charts:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"cluster:\n  type: gke\n")),Object(a.b)("h2",{id:"google-cloud-features"},"Google Cloud features"),Object(a.b)("h3",{id:"vpc-native-cluster"},"VPC native cluster"),Object(a.b)("p",null,"GKE clusters are ",Object(a.b)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/concepts/alias-ips"},"VPC native")," the default now, but for compatibility reasons silta deployments are set to route-based mode by default now. This is normally overridden in CI, according to cluster."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"cluster:\n  type: gke\n  vpcNative: true\n")),Object(a.b)("h3",{id:"gke-ingress-for-https-load-balancing"},"GKE Ingress for HTTP(S) Load Balancing"),Object(a.b)("p",null,"Projects can define ",Object(a.b)("inlineCode",{parentName:"p"},"exposeDomain")," hosts and use ",Object(a.b)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/concepts/ingress"},"GKE Ingress Class")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"exposeDomains:\n  example-gce-ingress:\n    hostname: example.com\n    # see ingress.gce definition. This can also be a custom ingress too.\n    ingress: gce\n    \ningress:\n  gce:\n    # Request a global static ip from cluster administrator first\n    staticIpAddressName: custom-ip-name\n\nnginx:\n  # Reverse proxy IP's to trust with contents of X-Forwarded-For header \n  realipfrom: \n    # Load Balancer IP (static ip you were given)\n    gce-lb-ip: 1.2.3.4/32;\n")),Object(a.b)("h3",{id:"cloud-armor"},"Cloud Armor"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features#cloud_armor"},"Cloud Armor")," can only be used with GKE Ingress. Once enabled, You can define security policy (Cloud Armor policy) for Your service's backendConfig."),Object(a.b)("p",null,'Silta uses "silta-ingress" security policy name by default, it can be adjusted.'),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'backendConfig:\n  securityPolicy:\n    name: "silta-ingress"\n')))}u.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,m=p["".concat(c,".").concat(b)]||p[b]||d[b]||a;return n?o.a.createElement(m,i(i({ref:t},l),{},{components:n})):o.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);